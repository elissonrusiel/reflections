How did viewing a diff between two versions of a file help you see the bug that was introduced?
    Because we can see only the changed code fragments and decide why the error occurs.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
    The control version will make me a better programmer because I do not waste time looking in a bunch of files which version has the information I need.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
    The pros are, the ability to create points of interest, create their own way of solutions. Unlike the automatic solution, when you can not add messages and you may have many points without major changes.
    The cons, in the version control manual, the possibility of forgetting to commit is high, and it is easier to lose portions of code, than in an automatic version control.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
    It's because version control is focused on working with projects and maintaining the state; instead, Google Docs is focused on keeping the file only because it does not relate to files.

How can you use the commands git log and git diff to view the history of files?
    First use the command git log to see all commits and then get the id of the interested commit and compare with the previous commit to visualise the history.

How might using version control make you more confident to make changes that could break something?
    Making me have the possibility to go back and find my mistake, faster than if I using a manually option.

Now that you have your workspace set up, what do you want to try using Git for?
    I want to try organize my projects and improve my skills like programmer.